{
  "name": "@serverless-advocate/envict",
  "version": "0.1.0-alpha.1",
  "description": "A zero-dependency TypeScript configuration management package",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.js",
      "import": "./dist/index.js"
    },
    "./package.json": "./package.json"
  },
  "scripts": {
    "build": "npm run clean && npm run build:dev",
    "build:dev": "tsc",
    "build:prod": "tsc --project tsconfig.build.json",
    "clean": "rm -rf dist",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "biome check .",
    "lint:fix": "biome check --apply .",
    "format": "biome format --write .",
    "format:check": "biome format .",
    "dev": "tsc --watch",
    "typecheck": "tsc --noEmit",
    "ci": "npm run lint && npm run typecheck && npm run test",
    "prepublishOnly": "npm run ci && npm run build:prod",
    "prepack": "npm run build:prod",
    "release": "LEFTHOOK=0 commit-and-tag-version",
    "release:alpha": "LEFTHOOK=0 commit-and-tag-version --prerelease alpha",
    "release:beta": "LEFTHOOK=0 commit-and-tag-version --prerelease beta",
    "release:stable": "LEFTHOOK=0 commit-and-tag-version --release-as 1.0.0",
    "example:basic": "npm run build && npx tsc examples/basic-example/index.ts --outDir examples/basic-example --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && PORT=8080 DEBUG=true APP_NAME=custom-app node examples/basic-example/index.js",
    "example:detailed": "npm run build && npx tsc examples/detailed-example/index.ts --outDir examples/detailed-example --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && NODE_ENV=production AWS_ACCOUNT_ID=987654321098 AWS_REGION=eu-west-1 LOG_LEVEL=ERROR node examples/detailed-example/index.js",
    "example:load-config": "npm run build && npx tsc examples/load-config/index.ts --outDir examples/load-config --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/load-config/index.js",
    "example:chained-load": "npm run build && npx tsc examples/chained-load/index.ts --outDir examples/chained-load --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/chained-load/index.js",
    "example:layered-config": "npm run build && npx tsc examples/layered-config/index.ts --outDir examples/layered-config --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/layered-config/index.js",
    "example:constructor-load": "npm run build && npx tsc examples/constructor-load/index.ts --outDir examples/constructor-load --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/constructor-load/index.js",
    "example:stage-fallback": "npm run build && npx tsc examples/stage-fallback/index.ts --outDir examples/stage-fallback --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/stage-fallback/index.js",
    "example:async-loading": "npm run build && npx tsc examples/async-loading/index.ts --outDir examples/async-loading --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/async-loading/index.js",
    "example:async-write": "npm run build && npx tsc examples/async-write/index.ts --outDir examples/async-write --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/async-write/index.js",
    "example:async-partial-write": "npm run build && npx tsc examples/async-partial-write/index.ts --outDir examples/async-partial-write --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/async-partial-write/index.js",
    "example:get-all-config": "npm run build && npx tsc examples/get-all-config/index.ts --outDir examples/get-all-config --target es2020 --module commonjs --moduleResolution node --esModuleInterop --skipLibCheck && node examples/get-all-config/index.js"
  },
  "keywords": [
    "configuration",
    "config",
    "environment",
    "typescript",
    "validation",
    "zero-dependency",
    "type-safe"
  ],
  "author": "Lee Gilmore",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leegilmorecode/envict.git"
  },
  "bugs": {
    "url": "https://github.com/leegilmorecode/envict/issues"
  },
  "homepage": "https://github.com/leegilmorecode/envict#readme",
  "devDependencies": {
    "@biomejs/biome": "^1.4.1",
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "commit-and-tag-version": "^12.6.0",
    "commitizen": "^4.3.1",
    "cz-conventional-changelog": "^3.3.0",
    "jest": "^29.7.0",
    "lefthook": "^1.13.6",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=18.13.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
